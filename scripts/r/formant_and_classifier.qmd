---
title: "Formant analysis and classifier results"
format: html
editor: source
---

```{r, echo=FALSE, message=FALSE, warning=FALSE}
knitr::opts_chunk$set(echo=FALSE, message=FALSE, warning=FALSE)
library(here)
library(tidyverse)
library(e1071)
library(caTools)
library(caret)
plot_data = read.csv(here("data", "text_tidy.csv"))

no_coart_data = read.csv(here("data", "formants_nocoart.csv")) %>% 
  mutate(type = "no_coart")

goodale_theme <- function() {
  theme(
    panel.background = element_rect(fill = "white"),
    axis.text = element_text(colour = "black", family = "Times New Roman", size = 14),
    axis.title = element_text(colour = "black", family = "Times New Roman", size = 14),
    legend.position = "bottom",
    legend.title = element_text(colour = "black", family = "Times New Roman", size = 14),
    legend.text = element_text(colour = "black", family = "Times New Roman", size = 14),
    plot.title = element_text(colour = "black", family = "Times New Roman", size = 14, hjust = 0.5)  # Center align the title
  )
}



run_classifier = function(data, split)
{  
split <- sample.split(data, SplitRatio = split)
train_cl <- subset(data, split == "TRUE")
test_cl <- subset(data, split == "FALSE")

# Fitting Naive Bayes Model 
# to training dataset
#set.seed(120)  # Setting Seed
classifier_cl <- naiveBayes(type ~ ., data = train_cl)
classifier_cl

# Predicting on test data'
y_pred <- predict(classifier_cl, newdata = test_cl)

# Confusion Matrix
cm <- table(test_cl$type, y_pred)
cm

# Model Evaluation
return(confusionMatrix(cm))
}

onset_no = no_coart_data %>% 
  select(type, f1b,f2b,f3b)

mid_no = no_coart_data %>% 
  select(type, f1,f2,f3)

off_set_no = no_coart_data %>% 
  select(type, f1e,f2e,f3e)

mid_formant_df = plot_data %>% select(type, f1, f2, f3) %>% 
  rbind(mid_no)

onset_formant_df = plot_data %>% select(type, f1b, f2b, f3b) %>% 
  rbind(onset_no)
  
offset_formant_df = plot_data %>% select(type, f1e, f2e, f3e) %>% 
  rbind(off_set_no)


```
## Onset F1 and F2 for approximants and fricatives 

```{r, echo=FALSE}
plot_data %>% 
  ggplot(aes(y = f1b, x = f2b, color = type)) + geom_point(size = 2) + scale_x_reverse() + 
    scale_color_manual(values = c("seagreen3", "orange")) +
  scale_y_reverse() + theme_minimal() + goodale_theme() + ylab("F1") + xlab("F2") + stat_ellipse(linetype = "dashed") + geom_point(aes(y = 580, x = 1351), color = "red", size = 3)
# 580, 1351
```

## Midpoint F1 and F2 for approximants and fricatives 

```{r, echo=FALSE}
plot_data %>% 
  ggplot(aes(y = f1, x = f2, color = type)) + geom_point(size = 2) + scale_x_reverse() + 
  scale_color_manual(values = c("seagreen3", "orange")) +
  scale_y_reverse() + theme_minimal() + goodale_theme() + ylab("F1") + xlab("F2") + stat_ellipse(linetype = "dashed") + geom_point(aes(y = 610, x = 1379), color = "red", size = 3) 

# 610, 1379

```

## Offset F1 and F2 for approximants and fricatives 

```{r, echo=FALSE}
plot_data %>% 
  ggplot(aes(y = f1e, x = f2e, color = type)) + geom_point(size = 2) + scale_x_reverse() + 
    scale_color_manual(values = c("seagreen3", "orange")) +
  scale_y_reverse() + theme_minimal() + goodale_theme() + ylab("F1") + xlab("F2") + stat_ellipse(linetype = "dashed") + geom_point(aes(y = 586, x = 1290), color = "red", size = 3)
# 586 1290
```


```{r}
plot_data_tp = plot_data %>% 
  select(fileID, type, consonant, f1,f2,f3,f1e,f2e,f3e,f1b,f2b,f3b) %>% 
  pivot_longer(f1:f3b, names_to = "formant_e", values_to = "hertz") %>% 
  mutate(time_point = 
           case_when(
             formant_e == "f1" | formant_e == "f2" | formant_e == "f3" ~ "mid",
             formant_e == "f1b" | formant_e == "f2b" | formant_e == "f3b" ~ "onset",
             formant_e == "f1e" | formant_e == "f2e" | formant_e == "f3e" ~ "offset"
           )) %>% 
  mutate(formant = 
           case_when(
             formant_e == "f1" | formant_e == "f1e" | formant_e == "f1b" ~ "f1",
             formant_e == "f2" | formant_e == "f2e" | formant_e == "f2b" ~ "f2",
             formant_e == "f3" | formant_e == "f3e" | formant_e == "f3b" ~ "f3"
           )) %>% 
  group_by(consonant, formant, time_point) %>% 
  summarise(mean_formant = mean(hertz)) 


plot_data_tp$time_point <- factor(plot_data_tp$time_point, levels=c("onset", "mid", "offset"))

plot_data_tp %>% 
  ggplot(aes(x = time_point, y = mean_formant, color = formant, group = formant)) + geom_point() + 
    scale_color_manual(values = c("purple", "gold", "gray50")) +
  facet_wrap(~consonant) + geom_line() + theme_minimal() + goodale_theme()
```


```{r}

plot_type = plot_data %>% 
  select(type, f1,f2,f3,f1e,f2e,f3e,f1b,f2b,f3b, fileID) %>% 
  rbind(no_coart_data) %>% 
  pivot_longer(f1:f3b, names_to = "formant_e", values_to = "hertz") %>% 
  mutate(time_point = 
           case_when(
             formant_e == "f1" | formant_e == "f2" | formant_e == "f3" ~ "mid",
             formant_e == "f1b" | formant_e == "f2b" | formant_e == "f3b" ~ "onset",
             formant_e == "f1e" | formant_e == "f2e" | formant_e == "f3e" ~ "offset"
           )) %>% 
  mutate(formant = 
           case_when(
             formant_e == "f1" | formant_e == "f1e" | formant_e == "f1b" ~ "f1",
             formant_e == "f2" | formant_e == "f2e" | formant_e == "f2b" ~ "f2",
             formant_e == "f3" | formant_e == "f3e" | formant_e == "f3b" ~ "f3"
           )) %>% 
  group_by(type, formant, time_point) %>% 
  summarise(mean_formant = mean(hertz)) 


plot_type$time_point <- factor(plot_type$time_point, levels=c("onset", "mid", "offset"))

plot_type %>% 
  ggplot(aes(x = time_point, y = mean_formant, color = formant, group = formant)) + geom_point() + 
    scale_color_manual(values = c("purple", "gold", "gray50")) +
  facet_wrap(~type) + geom_line() + theme_minimal() + goodale_theme()

```


### Onset classifier 
```{r}
run_classifier(onset_formant_df, .7)
```

### Midpoint classifier 
```{r}
run_classifier(mid_formant_df, .7)
```

### Offset classifier (all data)
```{r}
run_classifier(offset_formant_df, .7)
```




